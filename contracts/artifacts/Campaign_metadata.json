{
	"compiler": {
		"version": "0.8.4+commit.c7e474f2"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "campaignId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "time",
						"type": "uint256"
					}
				],
				"name": "CampaignDeadlineExtended",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "campaignId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "minimumContribution",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "goalType",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "token",
						"type": "address"
					}
				],
				"name": "CampaignDetailsModified",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "campaignId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "goalType",
						"type": "uint256"
					}
				],
				"name": "CampaignGoalTypeChange",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "campaignId",
						"type": "uint256"
					}
				],
				"name": "CampaignIDset",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "campaignId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "CampaignReported",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "campaignId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "enum Campaign.CAMPAIGN_STATE",
						"name": "state",
						"type": "uint8"
					}
				],
				"name": "CampaignStateChange",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "campaignId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "userId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "ContributionMade",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "campaignId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "userId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "ContributionWithdrawn",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "Paused",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "requestId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "campaignId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "duration",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "RequestAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "requestId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "campaignId",
						"type": "uint256"
					}
				],
				"name": "RequestComplete",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "rewardId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "campaignId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "deliveryDate",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "stock",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "active",
						"type": "bool"
					}
				],
				"name": "RewardCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "rewardId",
						"type": "uint256"
					}
				],
				"name": "RewardDestroyed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "rewardId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "campaignId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "deliveryDate",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "stock",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "active",
						"type": "bool"
					}
				],
				"name": "RewardModified",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "rewardId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "campaignId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "user",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "RewardeeAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "rewardeeId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "campaignId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "status",
						"type": "bool"
					}
				],
				"name": "RewardeeApproval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "previousAdminRole",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "newAdminRole",
						"type": "bytes32"
					}
				],
				"name": "RoleAdminChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "RoleGranted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "RoleRevoked",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "campaignId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "TargetMet",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "Unpaused",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "requestId",
						"type": "uint256"
					}
				],
				"name": "VoteCancelled",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "requestId",
						"type": "uint256"
					}
				],
				"name": "Voted",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "DEFAULT_ADMIN_ROLE",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_campaignFactory",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_root",
						"type": "address"
					}
				],
				"name": "__Campaign_init",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "acceptedToken",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "allowContributionAfterTargetIsMet",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "approvers",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "approversCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "campaignFactoryContract",
				"outputs": [
					{
						"internalType": "contract CampaignFactoryInterface",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "campaignID",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_rewardeeId",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "_status",
						"type": "bool"
					}
				],
				"name": "campaignSentReward",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "campaignState",
				"outputs": [
					{
						"internalType": "enum Campaign.CAMPAIGN_STATE",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_requestId",
						"type": "uint256"
					}
				],
				"name": "cancelVote",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_rewardId",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "_withReward",
						"type": "bool"
					}
				],
				"name": "contribute",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "targetCompletionValue",
						"type": "uint256"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "_recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_value",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_duration",
						"type": "uint256"
					}
				],
				"name": "createRequest",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_value",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_deliveryDate",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_stock",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "_active",
						"type": "bool"
					}
				],
				"name": "createReward",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "currentRunningRequest",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "deadline",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "deadlineSetTimes",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_rewardId",
						"type": "uint256"
					}
				],
				"name": "destroyReward",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_time",
						"type": "uint256"
					}
				],
				"name": "extendDeadline",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_requestId",
						"type": "uint256"
					}
				],
				"name": "finalizeRequest",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "finalizedRequestCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					}
				],
				"name": "getRoleAdmin",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "goalType",
				"outputs": [
					{
						"internalType": "enum Campaign.GOALTYPE",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "grantRole",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "hasRole",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "markCampaignComplete",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "maximumContribution",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "minimumContribution",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_value",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_deliveryDate",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_stock",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "_active",
						"type": "bool"
					}
				],
				"name": "modifyReward",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pauseCampaign",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "paused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "positiveReviewCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "renounceRole",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "reportCampaign",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "requestCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "requests",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "recepient",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "complete",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "approvalCount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "disapprovalCount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "duration",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_count",
						"type": "uint256"
					}
				],
				"name": "resetDeadlineSetTimes",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bool",
						"name": "_approval",
						"type": "bool"
					}
				],
				"name": "reviewCampaignPerformance",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "reviewCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "reviewMode",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "reviewed",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "reviews",
				"outputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "rating",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "createdAt",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "revokeRole",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "rewardees",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "rewardId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "deliveryConfirmedByCampaign",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "deliveryConfirmedByUser",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "rewards",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "deliveryDate",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "stock",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "exists",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "active",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "root",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_target",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_minimumContribution",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_duration",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_goalType",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "_allowContributionAfterTargetIsMet",
						"type": "bool"
					}
				],
				"name": "setCampaignSettings",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_state",
						"type": "uint256"
					}
				],
				"name": "setCampaignState",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_type",
						"type": "uint256"
					}
				],
				"name": "setGoalType",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "target",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalCampaignContribution",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_newOwner",
						"type": "address"
					}
				],
				"name": "transferCampaignOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "unpauseCampaign",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "userHasReward",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_rewardeeId",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "_status",
						"type": "bool"
					}
				],
				"name": "userReceivedCampaignReward",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "userTotalContribution",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_requestId",
						"type": "uint256"
					}
				],
				"name": "voteOnRequest",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					},
					{
						"internalType": "address payable",
						"name": "_wallet",
						"type": "address"
					}
				],
				"name": "withdrawContributionForUser",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					},
					{
						"internalType": "address payable",
						"name": "_wallet",
						"type": "address"
					}
				],
				"name": "withdrawOwnContribution",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"events": {
				"CampaignIDset(uint256)": {
					"details": "`Campaign`"
				},
				"CampaignStateChange(uint256,uint8)": {
					"details": "`Campaign State Events`"
				},
				"ContributionMade(uint256,uint256,uint256)": {
					"details": "`Contribution Events`"
				},
				"RequestAdded(uint256,uint256,uint256,address,uint256)": {
					"details": "`Request Events`"
				},
				"RewardCreated(uint256,uint256,uint256,uint256,uint256,bool)": {
					"details": "`Reward Events`"
				},
				"RewardeeAdded(uint256,uint256,uint256,uint256)": {
					"details": "`Rwardee Events`"
				},
				"Voted(uint256)": {
					"details": "`Vote Events`"
				}
			},
			"kind": "dev",
			"methods": {
				"__Campaign_init(address,address)": {
					"details": "Constructor",
					"params": {
						"_campaignFactory": "Address of factory",
						"_root": "Address of campaign owner"
					}
				},
				"campaignSentReward(uint256,bool)": {
					"details": "Used by the campaign owner to indicate they delivered the reward to the rewardee",
					"params": {
						"_rewardeeId": "ID to struct containing reward and user to be rewarded",
						"_status": "Indicates if the delivery was successful or not"
					}
				},
				"cancelVote(uint256)": {
					"details": "Approvers only method which cancels initial vote on a request",
					"params": {
						"_requestId": "ID of request being voted on"
					}
				},
				"contribute(address,uint256,bool)": {
					"details": "Contribute method enables a user become an approver in the campaign",
					"params": {
						"_rewardId": "Reward unique id",
						"_token": "Address of token to be used for transactions by default",
						"_withReward": "Indicates if the user wants a reward alongside their contribution"
					}
				},
				"createRequest(address,uint256,uint256)": {
					"details": "Creates a formal request to withdraw funds from user contributions called by the campagn manager or factory Restricted unless target is met and deadline is expired",
					"params": {
						"_duration": "Duration until users aren't able to vote on the request",
						"_recipient": "Address where requested funds are deposited",
						"_value": "Amount being requested by the campaign manager"
					}
				},
				"createReward(uint256,uint256,uint256,bool)": {
					"details": "Creates rewards contributors can attain",
					"params": {
						"_active": "Indicates if contributors can attain the reward",
						"_deliveryDate": "Time in which reward will be deliverd to contriutors",
						"_stock": "Quantity available for dispatch",
						"_value": "Reward cost"
					}
				},
				"destroyReward(uint256)": {
					"details": "Deletes a reward by id",
					"params": {
						"_rewardId": "Reward unique id"
					}
				},
				"extendDeadline(uint256)": {
					"details": "Extends campaign contribution deadline",
					"params": {
						"_time": "How long until the campaign stops receiving contributions"
					}
				},
				"finalizeRequest(uint256)": {
					"details": "Withdrawal method called only when a request receives the right amount votes",
					"params": {
						"_requestId": "ID of request being withdrawn"
					}
				},
				"getRoleAdmin(bytes32)": {
					"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
				},
				"grantRole(bytes32,address)": {
					"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
				},
				"hasRole(bytes32,address)": {
					"details": "Returns `true` if `account` has been granted `role`."
				},
				"markCampaignComplete()": {
					"details": "Called by campaign manager to mark the campaign as complete right after it secured enough reviews from users"
				},
				"modifyReward(uint256,uint256,uint256,uint256,bool)": {
					"details": "Modifies a reward by id",
					"params": {
						"_active": "Indicates if contributors can attain the reward",
						"_deliveryDate": "Time in which reward will be deliverd to contriutors",
						"_id": "Reward unique id",
						"_stock": "Quantity available for dispatch",
						"_value": "Reward cost"
					}
				},
				"pauseCampaign()": {
					"details": "Pauses the campaign, it halts all transactions in the campaign"
				},
				"paused()": {
					"details": "Returns true if the contract is paused, and false otherwise."
				},
				"renounceRole(bytes32,address)": {
					"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
				},
				"reportCampaign()": {
					"details": "Called by an approver to report a campaign to factory. Campaign must be in collection or live state"
				},
				"resetDeadlineSetTimes(uint256)": {
					"details": "Sets the number of times the campaign owner can extended deadlines. Restricted to factory",
					"params": {
						"_count": "Number of times a campaign owner can extend the deadline"
					}
				},
				"reviewCampaignPerformance(bool)": {
					"details": "User acknowledgement of review state enabled by the campaign owner",
					"params": {
						"_approval": "Indicates user approval of the campaign"
					}
				},
				"reviewMode()": {
					"details": "Pauses the campaign and switches `campaignState` to `REVIEW` indicating it's ready to be reviewd by it's approvers after the campaign is over"
				},
				"revokeRole(bytes32,address)": {
					"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
				},
				"setCampaignSettings(uint256,uint256,uint256,uint256,address,bool)": {
					"details": "Modifies campaign details while it's not approved",
					"params": {
						"_allowContributionAfterTargetIsMet": "Indicates if the campaign can receive contributions after duration expires",
						"_duration": "How long until the campaign stops receiving contributions",
						"_goalType": "Indicates if campaign is fixed or flexible with contributions",
						"_minimumContribution": "The minimum amout required to be an approver",
						"_target": "Contribution target of the campaign",
						"_token": "Address of token to be used for transactions by default"
					}
				},
				"setCampaignState(uint256)": {
					"details": "Changes campaign state"
				},
				"setGoalType(uint256)": {
					"details": "Changes campaign's goal type between `FLEXIBLE` or `FIXED`",
					"params": {
						"_type": "Indicates if campaign is fixed or flexible with contributions"
					}
				},
				"supportsInterface(bytes4)": {
					"details": "See {IERC165-supportsInterface}."
				},
				"transferCampaignOwnership(address)": {
					"details": "Transfers campaign ownership from one user to another.",
					"params": {
						"_newOwner": "Address of the user campaign ownership is being transfered to"
					}
				},
				"unpauseCampaign()": {
					"details": "Unpauses the campaign, transactions in the campaign resume per usual"
				},
				"userReceivedCampaignReward(uint256,bool)": {
					"details": "Used by a user eligible for rewards to indicate they received their reward",
					"params": {
						"_rewardeeId": "ID to struct containing reward and user to be rewarded",
						"_status": "Indicates if the delivery was successful or not"
					}
				},
				"voteOnRequest(uint256)": {
					"details": "Approvers only method which approves spending request issued by the campaign manager or factory",
					"params": {
						"_requestId": "ID of request being voted on"
					}
				},
				"withdrawContributionForUser(address,uint256,address)": {
					"details": "Allows withdrawal of balance by factory on behalf of a user.  Cases where users wallet is compromised",
					"params": {
						"_amount": "Amount requested to be withdrawn from contributions",
						"_user": "User whose funds are being requested",
						"_wallet": "Address where amount is delivered"
					}
				},
				"withdrawOwnContribution(uint256,address)": {
					"details": "Allows withdrawal of contribution for a user, works if campaign target isn't met",
					"params": {
						"_amount": "Amount requested to be withdrawn from contributions",
						"_wallet": "Address where amount is delivered"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Campaign.sol": "Campaign"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
			"keccak256": "0x719f71989e630280a6902f857ef2b038d761ef2d0d51611f9da463be6c7c4be5",
			"license": "MIT",
			"urls": [
				"bzz-raw://eada89c17578d8ffbadd76c7247397d37ccae1f8e0e2b6d26057117d3de2dbed",
				"dweb:/ipfs/QmS3zjZ5SdridEYWAaS7RXtRB9YnKVmN3T5Lq2Q7rjz2oT"
			]
		},
		"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
			"keccak256": "0x67d2f282a9678e58e878a0b774041ba7a01e2740a262aea97a3f681339914713",
			"license": "MIT",
			"urls": [
				"bzz-raw://297df5725003e586651278a5d021b176457c5bb05a954c8490f21db2754e7352",
				"dweb:/ipfs/QmSe9AHjVnDn39NqT9hkjuCCGUwtc989WuZ5rWTe3GHrUD"
			]
		},
		"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
			"keccak256": "0x742c0fbab73bf595ca40025f6e81cb48dbd5e133950717f7befd062a925c0148",
			"license": "MIT",
			"urls": [
				"bzz-raw://104b5ce52aba5c5f57735005b5869e8c97232a9ac6a37a8dcdf8dc38e17ea5aa",
				"dweb:/ipfs/QmRdWh7R1oYzZMAAwwGUu8Sw18ChMAyCXD513RidThvjuZ"
			]
		},
		"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
			"keccak256": "0x89fa60d14355f7ae06af11e28fce2bb90c5c6186645d681a30e1b36234a4c210",
			"license": "MIT",
			"urls": [
				"bzz-raw://6f05bc422cea1903d9ba10eece86d8bce72c2f1a225f174101b992b978534c2d",
				"dweb:/ipfs/QmQzi5ZMexyRRfkyur7G2uHUmaQg4VfvCkUuxbSdqsXTSv"
			]
		},
		"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
			"keccak256": "0x8d4a0f2b5b760b5e2c19ed3c108d83897a4dfd5bfed97a93867918df19191e5e",
			"license": "MIT",
			"urls": [
				"bzz-raw://7787f0e6d168740118ca2fc09a35e33644656f6998b124ab09a5fe790d5388f7",
				"dweb:/ipfs/QmeRPExxvGzci1QVdGpvoRWynS6xyczVXYNVqHLoMQaaMU"
			]
		},
		"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
			"keccak256": "0xc28d9f2ac7088d478d86ec6c0e1dadd48af1b2d0c1f6d497f9b652339e3002ec",
			"license": "MIT",
			"urls": [
				"bzz-raw://6d6d207eb0751beba40697f8145294a949cc6632426312600dee2cb1c9aaa0ad",
				"dweb:/ipfs/QmPLgWdQtDKZgcNDhnzYDbuZQgYNQW5YyqHunDaA8ekQ5m"
			]
		},
		"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
			"keccak256": "0x5642ae1d6b33c5c0b71a8412c6c64cbcf2468b84a002bee3e33cdb5644d25cdb",
			"license": "MIT",
			"urls": [
				"bzz-raw://07ba474854eacf022fca2ab63af2b09653f476a9ef2d144ea3d022a0c0b92726",
				"dweb:/ipfs/QmVNfrArMejFSrPMktAtDte64FJ2fGPQHqgSXDz2SH6dse"
			]
		},
		"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
			"keccak256": "0x8e9eb503de1189f50c5f16fef327da310b11898d6b9ab3ca937df07c35233b9e",
			"license": "MIT",
			"urls": [
				"bzz-raw://9631a7abcad07067f268b6295668a287e205ea9a8dc0fca02c2bf4db6c39431d",
				"dweb:/ipfs/QmUYFfB2AngTZLEsah4u8Z44riaB6yWkUXeasi1oG7ipfS"
			]
		},
		"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol": {
			"keccak256": "0x6964377da5c19ade6b3e96bae0c0e82494d518af70cf12d2cdb3276f78fb3d85",
			"license": "MIT",
			"urls": [
				"bzz-raw://6fdcd89cc451559fcf17eb5b0a657a4d6217809603ece8439f933f836521f31f",
				"dweb:/ipfs/QmU75qTF1VG5KUaxZv2TrFYDPLmkraeTdmAG4P4j1ehoa6"
			]
		},
		"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
			"keccak256": "0x17c9c5d2d6b56527215ee7b3da6dde66b6f23f1b3d5c66cc436e753ef349a97a",
			"license": "MIT",
			"urls": [
				"bzz-raw://dd7c775bc6000f44c048796b5e013dbb3ec7592986bc289868b19ff9439ee31d",
				"dweb:/ipfs/QmSuBfTT9z9sEpmEcGihEc5DJGsXery8QyyuNfvub875ej"
			]
		},
		"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
			"keccak256": "0x1c4860acd323e34a67b3e97faab9aaa55fe8e92b1dcf08b5f47f3468d58ce75c",
			"license": "MIT",
			"urls": [
				"bzz-raw://3c2746f8ebb4bfb6b8e8a768296c7f85f11b36f4873daabb91933c3602f00590",
				"dweb:/ipfs/QmdumDez8WEdk9FDuP7Jp5pDSJiQeFtFSJw3B5CEHJL4KU"
			]
		},
		"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol": {
			"keccak256": "0x1d84970ad956bd24b298d0876ff96e1e2125daead8a6791c5c7753e83123b724",
			"license": "MIT",
			"urls": [
				"bzz-raw://70ce1561c46b66e51521813d10ba0c928ea185cc7ebd63a80a73e0f704f3fd77",
				"dweb:/ipfs/QmXgsPb22AV46v1k6w8AR3mYavteY7zWGUB26LKLvY4jqM"
			]
		},
		"contracts/Campaign.sol": {
			"keccak256": "0x083d7e256198442252684c47dcf8a90ed24a1f7e06cd7c671c299a376f57c3db",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://4db24bca5a481858ab20d03f4aaafc44a772c5c1095f11e272490cb8186ec15c",
				"dweb:/ipfs/QmWCgrvShEoEHh1DcyLN3cNAPwzumHdspQDJMnhVF9YeP2"
			]
		},
		"contracts/utils/AccessControl.sol": {
			"keccak256": "0x06f0e816e0c11451a0565d398b09cf61034b2b0a1103359d40754d2f6320253d",
			"license": "MIT",
			"urls": [
				"bzz-raw://44f2a62af9c5f6fdd1da19b83a7553aed35224e35fa94d1d48efb6dbfe015513",
				"dweb:/ipfs/QmWDRHR9obNL8aSDV8oUiMTH54y2Czy8LQmMAw42kEiyzK"
			]
		},
		"contracts/utils/CampaignFactoryLib.sol": {
			"keccak256": "0x246a80dcf41cd6c525bf33b4dc894c2b2703845d59b54e061bfae23b4185259a",
			"license": "MIT",
			"urls": [
				"bzz-raw://eafb9484cd359ff23a0e76cfe1e7c8a08742708f87276a21b59427fee7e46758",
				"dweb:/ipfs/QmSB8KBiGDFTpJ7SbakMmv59r86hUoefMQn4DWg4o4ZG3U"
			]
		},
		"contracts/utils/FactoryInterface.sol": {
			"keccak256": "0x060db98ba333ffe2b1d5d3f2e8eea760273861093572a25f7e3ff551d30d3d42",
			"license": "MIT",
			"urls": [
				"bzz-raw://82885788abd26b4ad14d5f52bca287b2c6d7cb8ae28c8594a3addf58f445f1b3",
				"dweb:/ipfs/QmY9UF64nQTSwmtmwJ76LnmWWT9eQAZsvcqeCsQwywJLwD"
			]
		},
		"contracts/utils/math/DecimalMath.sol": {
			"keccak256": "0xbac3aadeefd906571615eb9fb409479be0940222ea8f0c9a299cf650a2dcf91f",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://8b9231ea8fe4c580a90bb6ca20a8a1a6c45b823e852e1ce1936f643b8db272f3",
				"dweb:/ipfs/QmW9KHqNgWf6u9DKy4gPowXERzdjGUiPWCKvxKT4bhitP8"
			]
		},
		"contracts/utils/math/SafeMath.sol": {
			"keccak256": "0x1f57bd3142cc0da02eb241be0311efe3d6827f7874e22dd97a36c80122b819e1",
			"license": "MIT",
			"urls": [
				"bzz-raw://36b01f76eb4fbf013f8042dfd95b96d4ca40c9742958a2dea651d914bcde3d19",
				"dweb:/ipfs/QmTr2VYuvQSdYqwbRjyeiJ1hASFcCf7511AJen1jbU94oa"
			]
		}
	},
	"version": 1
}