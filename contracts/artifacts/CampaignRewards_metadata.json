{
	"compiler": {
		"version": "0.8.0+commit.c7dfd78e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "contract Campaign",
						"name": "campaign",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "CampaignRewardOwnerSet",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "rewardId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "contract Campaign",
						"name": "campaign",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "deliveryDate",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "stock",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "active",
						"type": "bool"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "RewardCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "rewardId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "contract Campaign",
						"name": "campaign",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "RewardDestroyed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "rewardId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "contract Campaign",
						"name": "campaign",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "deliveryDate",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "stock",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "active",
						"type": "bool"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "RewardModified",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "rewardId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "contract Campaign",
						"name": "campaign",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "RewardRecipientAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "rewardRecipientId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "contract Campaign",
						"name": "campaign",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "RewardRecipientApproval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "rewardId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "contract Campaign",
						"name": "campaign",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "count",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "RewardStockIncreased",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "rewardRecipientId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "contract Campaign",
						"name": "campaign",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "status",
						"type": "bool"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "RewarderApproval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "previousAdminRole",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "newAdminRole",
						"type": "bytes32"
					}
				],
				"name": "RoleAdminChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "RoleGranted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "RoleRevoked",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "DEFAULT_ADMIN_ROLE",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract CampaignFactory",
						"name": "_campaignFactory",
						"type": "address"
					},
					{
						"internalType": "contract Campaign",
						"name": "_campaign",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_campaignOwner",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_campaignId",
						"type": "uint256"
					}
				],
				"name": "__CampaignRewards_init",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_account",
						"type": "address"
					},
					{
						"internalType": "bytes32",
						"name": "_role",
						"type": "bytes32"
					}
				],
				"name": "addRole",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_rewardId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					}
				],
				"name": "assignReward",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "campaign",
				"outputs": [
					{
						"internalType": "contract Campaign",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "campaignContract",
				"outputs": [
					{
						"internalType": "contract CampaignInterface",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "campaignFactoryContract",
				"outputs": [
					{
						"internalType": "contract CampaignFactoryInterface",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "campaignID",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "campaignRewardAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_rewardRecipientId",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "_status",
						"type": "bool"
					}
				],
				"name": "campaignSentReward",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_value",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_deliveryDate",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_stock",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "_active",
						"type": "bool"
					}
				],
				"name": "createReward",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_rewardId",
						"type": "uint256"
					}
				],
				"name": "destroyReward",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					}
				],
				"name": "getRoleAdmin",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "grantRole",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "hasRole",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_rewardId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_count",
						"type": "uint256"
					}
				],
				"name": "increaseRewardStock",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_rewardId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_value",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_deliveryDate",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_stock",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "_active",
						"type": "bool"
					}
				],
				"name": "modifyReward",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_account",
						"type": "address"
					},
					{
						"internalType": "bytes32",
						"name": "_role",
						"type": "bytes32"
					}
				],
				"name": "removeRole",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceAdmin",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					}
				],
				"name": "renounceRewards",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "renounceRole",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "revokeRole",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "rewardRecipients",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "rewardId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "deliveryConfirmedByCampaign",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "deliveryConfirmedByUser",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "rewardToRewardRecipientCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "rewards",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "deliveryDate",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "stock",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "exists",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "active",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "root",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_oldAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_newAddress",
						"type": "address"
					}
				],
				"name": "transferRewards",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_rewardRecipientId",
						"type": "uint256"
					}
				],
				"name": "userReceivedCampaignReward",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "userRewardCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"events": {
				"CampaignRewardOwnerSet(address,address,address)": {
					"details": "`Initializer Event`"
				},
				"RewardCreated(uint256,address,uint256,uint256,uint256,bool,address)": {
					"details": "`Reward Events`"
				},
				"RewardRecipientAdded(uint256,address,uint256,address)": {
					"details": "`Rward Recipient Events`"
				}
			},
			"kind": "dev",
			"methods": {
				"__CampaignRewards_init(address,address,address,uint256)": {
					"details": "Constructor",
					"params": {
						"_campaignFactory": "Address of factory",
						"_campaignId": "ID of campaign reward contract belongs to",
						"_campaignOwner": "Address of campaign owner"
					}
				},
				"addRole(address,bytes32)": {
					"details": "Add an account to the role. Restricted to admins.",
					"params": {
						"_account": "Address of user being assigned role",
						"_role": "Role being assigned"
					}
				},
				"assignReward(uint256,uint256,address)": {
					"details": "Assigns a reward to a user after payment from parent contract Campaign",
					"params": {
						"_amount": "Amount being paid by the user",
						"_rewardId": "ID of the reward being assigned",
						"_user": "Address of user reward is being assigned to"
					}
				},
				"campaignSentReward(uint256,bool)": {
					"details": "Called by the campaign owner to indicate they delivered the reward to the rewardRecipient",
					"params": {
						"_rewardRecipientId": "ID to struct containing reward and user to be rewarded",
						"_status": "Indicates if the delivery was successful or not"
					}
				},
				"createReward(uint256,uint256,uint256,bool)": {
					"details": "Creates rewards contributors can attain",
					"params": {
						"_active": "Indicates if contributors can attain the reward",
						"_deliveryDate": "Time in which reward will be deliverd to contriutors",
						"_stock": "Quantity available for dispatch",
						"_value": "Reward cost"
					}
				},
				"destroyReward(uint256)": {
					"details": "Deletes a reward by id",
					"params": {
						"_rewardId": "Reward unique id"
					}
				},
				"getRoleAdmin(bytes32)": {
					"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
				},
				"grantRole(bytes32,address)": {
					"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
				},
				"hasRole(bytes32,address)": {
					"details": "Returns `true` if `account` has been granted `role`."
				},
				"increaseRewardStock(uint256,uint256)": {
					"details": "Increases a reward stock count",
					"params": {
						"_count": "Stock count to increase by",
						"_rewardId": "Reward unique id"
					}
				},
				"modifyReward(uint256,uint256,uint256,uint256,bool)": {
					"details": "Modifies a reward by id",
					"params": {
						"_active": "Indicates if contributors can attain the reward",
						"_deliveryDate": "Time in which reward will be deliverd to contriutors",
						"_rewardId": "Reward unique id",
						"_stock": "Quantity available for dispatch",
						"_value": "Reward cost"
					}
				},
				"removeRole(address,bytes32)": {
					"details": "Remove an account from the role. Restricted to admins.",
					"params": {
						"_account": "Address of user whose role is being removed",
						"_role": "Role being removed"
					}
				},
				"renounceAdmin()": {
					"details": "Remove oneself from the admin role."
				},
				"renounceRewards(address)": {
					"details": "Renounces rewards owned by the specified user",
					"params": {
						"_user": "Address of user who rewards are being renounced"
					}
				},
				"renounceRole(bytes32,address)": {
					"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
				},
				"revokeRole(bytes32,address)": {
					"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
				},
				"supportsInterface(bytes4)": {
					"details": "See {IERC165-supportsInterface}."
				},
				"transferRewards(address,address)": {
					"details": "Transfers rewards from the old owner to a new owner",
					"params": {
						"_newAddress": "Address of new owner rewards are being transferred to",
						"_oldAddress": "Address of previous owner of rewards"
					}
				},
				"userReceivedCampaignReward(uint256)": {
					"details": "Called by a user eligible for rewards to indicate they received their reward",
					"params": {
						"_rewardRecipientId": "ID to struct containing reward and user to be rewarded"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/CampaignRewards.sol": "CampaignRewards"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 1
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
			"keccak256": "0x719f71989e630280a6902f857ef2b038d761ef2d0d51611f9da463be6c7c4be5",
			"license": "MIT",
			"urls": [
				"bzz-raw://eada89c17578d8ffbadd76c7247397d37ccae1f8e0e2b6d26057117d3de2dbed",
				"dweb:/ipfs/QmS3zjZ5SdridEYWAaS7RXtRB9YnKVmN3T5Lq2Q7rjz2oT"
			]
		},
		"@openzeppelin/contracts-upgradeable/proxy/ClonesUpgradeable.sol": {
			"keccak256": "0x4dc6dad1fc53f05013cffc92c2c39ec795bfca13776488d68b9f8cedd1464dd3",
			"license": "MIT",
			"urls": [
				"bzz-raw://6b99ea341e4def5725e5bef05f24358380a3570a2bc62e25308f83817434bf27",
				"dweb:/ipfs/QmbKqHkLx8iPfQZVML5vb27FH1HYhfSammy7hP5Qfjzsta"
			]
		},
		"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
			"keccak256": "0x67d2f282a9678e58e878a0b774041ba7a01e2740a262aea97a3f681339914713",
			"license": "MIT",
			"urls": [
				"bzz-raw://297df5725003e586651278a5d021b176457c5bb05a954c8490f21db2754e7352",
				"dweb:/ipfs/QmSe9AHjVnDn39NqT9hkjuCCGUwtc989WuZ5rWTe3GHrUD"
			]
		},
		"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
			"keccak256": "0x742c0fbab73bf595ca40025f6e81cb48dbd5e133950717f7befd062a925c0148",
			"license": "MIT",
			"urls": [
				"bzz-raw://104b5ce52aba5c5f57735005b5869e8c97232a9ac6a37a8dcdf8dc38e17ea5aa",
				"dweb:/ipfs/QmRdWh7R1oYzZMAAwwGUu8Sw18ChMAyCXD513RidThvjuZ"
			]
		},
		"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
			"keccak256": "0x89fa60d14355f7ae06af11e28fce2bb90c5c6186645d681a30e1b36234a4c210",
			"license": "MIT",
			"urls": [
				"bzz-raw://6f05bc422cea1903d9ba10eece86d8bce72c2f1a225f174101b992b978534c2d",
				"dweb:/ipfs/QmQzi5ZMexyRRfkyur7G2uHUmaQg4VfvCkUuxbSdqsXTSv"
			]
		},
		"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
			"keccak256": "0x8d4a0f2b5b760b5e2c19ed3c108d83897a4dfd5bfed97a93867918df19191e5e",
			"license": "MIT",
			"urls": [
				"bzz-raw://7787f0e6d168740118ca2fc09a35e33644656f6998b124ab09a5fe790d5388f7",
				"dweb:/ipfs/QmeRPExxvGzci1QVdGpvoRWynS6xyczVXYNVqHLoMQaaMU"
			]
		},
		"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
			"keccak256": "0xc28d9f2ac7088d478d86ec6c0e1dadd48af1b2d0c1f6d497f9b652339e3002ec",
			"license": "MIT",
			"urls": [
				"bzz-raw://6d6d207eb0751beba40697f8145294a949cc6632426312600dee2cb1c9aaa0ad",
				"dweb:/ipfs/QmPLgWdQtDKZgcNDhnzYDbuZQgYNQW5YyqHunDaA8ekQ5m"
			]
		},
		"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
			"keccak256": "0x5642ae1d6b33c5c0b71a8412c6c64cbcf2468b84a002bee3e33cdb5644d25cdb",
			"license": "MIT",
			"urls": [
				"bzz-raw://07ba474854eacf022fca2ab63af2b09653f476a9ef2d144ea3d022a0c0b92726",
				"dweb:/ipfs/QmVNfrArMejFSrPMktAtDte64FJ2fGPQHqgSXDz2SH6dse"
			]
		},
		"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
			"keccak256": "0x8e9eb503de1189f50c5f16fef327da310b11898d6b9ab3ca937df07c35233b9e",
			"license": "MIT",
			"urls": [
				"bzz-raw://9631a7abcad07067f268b6295668a287e205ea9a8dc0fca02c2bf4db6c39431d",
				"dweb:/ipfs/QmUYFfB2AngTZLEsah4u8Z44riaB6yWkUXeasi1oG7ipfS"
			]
		},
		"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol": {
			"keccak256": "0x6964377da5c19ade6b3e96bae0c0e82494d518af70cf12d2cdb3276f78fb3d85",
			"license": "MIT",
			"urls": [
				"bzz-raw://6fdcd89cc451559fcf17eb5b0a657a4d6217809603ece8439f933f836521f31f",
				"dweb:/ipfs/QmU75qTF1VG5KUaxZv2TrFYDPLmkraeTdmAG4P4j1ehoa6"
			]
		},
		"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
			"keccak256": "0x17c9c5d2d6b56527215ee7b3da6dde66b6f23f1b3d5c66cc436e753ef349a97a",
			"license": "MIT",
			"urls": [
				"bzz-raw://dd7c775bc6000f44c048796b5e013dbb3ec7592986bc289868b19ff9439ee31d",
				"dweb:/ipfs/QmSuBfTT9z9sEpmEcGihEc5DJGsXery8QyyuNfvub875ej"
			]
		},
		"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
			"keccak256": "0x1c4860acd323e34a67b3e97faab9aaa55fe8e92b1dcf08b5f47f3468d58ce75c",
			"license": "MIT",
			"urls": [
				"bzz-raw://3c2746f8ebb4bfb6b8e8a768296c7f85f11b36f4873daabb91933c3602f00590",
				"dweb:/ipfs/QmdumDez8WEdk9FDuP7Jp5pDSJiQeFtFSJw3B5CEHJL4KU"
			]
		},
		"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol": {
			"keccak256": "0x1d84970ad956bd24b298d0876ff96e1e2125daead8a6791c5c7753e83123b724",
			"license": "MIT",
			"urls": [
				"bzz-raw://70ce1561c46b66e51521813d10ba0c928ea185cc7ebd63a80a73e0f704f3fd77",
				"dweb:/ipfs/QmXgsPb22AV46v1k6w8AR3mYavteY7zWGUB26LKLvY4jqM"
			]
		},
		"contracts/Campaign.sol": {
			"keccak256": "0xba1cca7a898d3f92e2f49bd62ea6bb3db45ac7523dd83ee7de3ccb9891b91762",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://f2bb2e7a13a2e69e5c44f05c97c31b607a0008d7bd9ebe60dc27482a81aa0b33",
				"dweb:/ipfs/QmdNnb5dvCjShJLskmprpvUGLxLmZnZZr4ox4R41ohcXuq"
			]
		},
		"contracts/CampaignFactory.sol": {
			"keccak256": "0x2ba93fbb67f1c316c99b775d26eeea2a4c49d4958e7dd5250db7eb6d0692f7c1",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://e784b7cb89779db21a70992e366b6064381f172a550d70990dd36eefab71683b",
				"dweb:/ipfs/QmT5AZWtiMXj8dQLxnNJfvzysWdYyRvFxi8nNP1CXFwurv"
			]
		},
		"contracts/CampaignRewards.sol": {
			"keccak256": "0x4c11271bd291e2f779278eadda9cb508d2fe3ac87cf571fa959a89f2cab22881",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://e698383eb2359f010ceae728a662e5af3af0f3fc5d9bba802692555b6f266b3d",
				"dweb:/ipfs/QmeKQX74yNWKs6PxEdfv1Gyh68c6Rh1JkkWtyHXUVfGyYr"
			]
		},
		"contracts/interfaces/CampaignFactoryInterface.sol": {
			"keccak256": "0x5a950076a0ec80c24aaa46657246e01adbf43b09fb98288073c5de37fd3bf3a1",
			"license": "MIT",
			"urls": [
				"bzz-raw://90c0a19ec1fc2d0e69fcab632f1b106f02e5eedd7590261b27416418a4d700bf",
				"dweb:/ipfs/QmXGX616N5QP9EYgd1wqNdZxgMTHQuQ9GmCXig1grqop8o"
			]
		},
		"contracts/interfaces/CampaignInterface.sol": {
			"keccak256": "0x4476473c8d361308937baa313435c15ff2c523fa3d6e4b5fcfeb00b0d7da73ed",
			"license": "MIT",
			"urls": [
				"bzz-raw://86ed2fbac532f4238df21b193f1f6a5d5db14d457a0cea558e822bd9792316f2",
				"dweb:/ipfs/QmUDVcyrFrEuBp1Hu6UnREf2EJCohVt4JKaqQ8zVuDh9iL"
			]
		},
		"contracts/interfaces/CampaignRewardInterface.sol": {
			"keccak256": "0xe778daa81d86c1aeaddc3b384ca1f78ee8c0843048a87dcb9f89633784925c36",
			"license": "MIT",
			"urls": [
				"bzz-raw://781c3d8b18d433e76cab45894b6e468e68bd9232639af11767e90f39bd6b8352",
				"dweb:/ipfs/QmTPhfnPcM4FsPHKVhwhiQ2V49578jGtbtQ94LU6rmLLzu"
			]
		},
		"contracts/libraries/contracts/CampaignFactoryLib.sol": {
			"keccak256": "0x7a105fbe9dc3f573d0cf7f2864e13389d33b71f5175718a9609a08767a8e06d3",
			"license": "MIT",
			"urls": [
				"bzz-raw://f41a6ac2e6e2c806d43082ee826838ff12097aeca608059bf3a86bf4904c7e99",
				"dweb:/ipfs/QmVbVHTMws7WCZJjRWnV9vVkJzCwAbDzDqJ1exFB7suzLZ"
			]
		},
		"contracts/libraries/contracts/CampaignLib.sol": {
			"keccak256": "0xd683dff6c80d79c899fbabe102f06b3509a665200f2d95d2c67896ec4cb9b2af",
			"license": "MIT",
			"urls": [
				"bzz-raw://b0a9db45941b1fd32a3eb9650fc33db8a8590933465de11ce7ae2f4c20a03da7",
				"dweb:/ipfs/QmWsCqg9toCdHVmuAyGEB9ttfbzJaEHrEphxBki5YiyMRu"
			]
		},
		"contracts/libraries/contracts/CampaignRewardLib.sol": {
			"keccak256": "0xd2bb7c675e0e3ec1c5345c5d859ff54f205dcd1a7a7b42cf3efa02fb1e117484",
			"license": "MIT",
			"urls": [
				"bzz-raw://feee59672566d5aa1491c458aa74b46eb9923819419d9db411498798dd2a3d5c",
				"dweb:/ipfs/QmXnK2XavCU5URTzFdH6EbkbVZeoBmDozPEeuJaTMa92BT"
			]
		},
		"contracts/libraries/math/DecimalMath.sol": {
			"keccak256": "0xbac3aadeefd906571615eb9fb409479be0940222ea8f0c9a299cf650a2dcf91f",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://8b9231ea8fe4c580a90bb6ca20a8a1a6c45b823e852e1ce1936f643b8db272f3",
				"dweb:/ipfs/QmW9KHqNgWf6u9DKy4gPowXERzdjGUiPWCKvxKT4bhitP8"
			]
		},
		"contracts/libraries/math/SafeMath.sol": {
			"keccak256": "0x1f57bd3142cc0da02eb241be0311efe3d6827f7874e22dd97a36c80122b819e1",
			"license": "MIT",
			"urls": [
				"bzz-raw://36b01f76eb4fbf013f8042dfd95b96d4ca40c9742958a2dea651d914bcde3d19",
				"dweb:/ipfs/QmTr2VYuvQSdYqwbRjyeiJ1hASFcCf7511AJen1jbU94oa"
			]
		},
		"contracts/utils/AccessControl.sol": {
			"keccak256": "0xdcf6e6aaa666a5b9419a1d6810e66d54e375c2cf9b480ec056c34f7f758bbfd1",
			"license": "MIT",
			"urls": [
				"bzz-raw://db458bdfeb2089e4feec73b9807febb20c07f74c74349ce6d4a3825724d5cd40",
				"dweb:/ipfs/QmXuzit1ZAeqGAiqNsprDZ4XLnZDuTekkwXQH3cj4LJRqx"
			]
		}
	},
	"version": 1
}